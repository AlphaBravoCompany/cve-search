function timeSelectDisable(){
  var selected = document.getElementById("timeSelect").value;
  switch(selected){
    case "all":
      document.getElementById('startDate').readOnly = true;
      document.getElementById('endDate').readOnly = true;
      document.getElementById('timeTypeSelect').readOnly = true;
      break;
    case "from":
      document.getElementById('startDate').readOnly = false;
      document.getElementById('endDate').readOnly = true;
      document.getElementById('timeTypeSelect').readOnly = false;
      break;
    case "until":
      document.getElementById('startDate').readOnly = true;
      document.getElementById('endDate').readOnly = false;
      document.getElementById('timeTypeSelect').readOnly = false;
      break;
    case "between":  // Fallthrough
    case "outside":
      document.getElementById('startDate').readOnly = false;
      document.getElementById('endDate').readOnly = false;
      document.getElementById('timeTypeSelect').readOnly = false;
  }
}

function cvssSelectDisable(){
  var selected = document.getElementById("cvssSelect").value;
  switch(selected){
    case "all":
      document.getElementById('cvss').readOnly = true;
      break;
    default:
      document.getElementById('cvss').readOnly = false;
  }
}

function validateDates(){
  var startDate = new Date(document.getElementById("startDate").value);
  var endDate= new Date(document.getElementById("endDate").value);

  var selected = document.getElementById("timeSelect").value;
  switch(selected){
    case "all":
      break;
    case "from":
      if (!isValidDate(startDate)) {
        setFilterError('Starting date is not set.');
        return false
      }
      break;
    case "until":
      if (!isValidDate(endDate)) {
        setFilterError('End date is not set.');
        return false
      }
      break;
    case "between":  // Fallthrough
    case "outside":
      if (isValidDate(startDate) && isValidDate(endDate)) {
        if (startDate.getTime() > endDate.getTime()) {
          setFilterError('End date before starting date.');
          return false
        }
      } else {
        setFilterError('Both dates must be set.');
        return false
      }
  }
  return true
}

function isValidDate(d) {
  return d instanceof Date && !isNaN(d);
}

function setFilterError(text) {
  $('#filter_warning').text(text);
}